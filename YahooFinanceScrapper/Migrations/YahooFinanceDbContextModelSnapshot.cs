// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YahooFinanceScrapper.Repositories;

#nullable disable

namespace YahooFinanceScrapper.Migrations
{
    [DbContext(typeof(YahooFinanceDbContext))]
    partial class YahooFinanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YahooFinanceScrapper.Models.Ticker", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("ClosedPriceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeadquartersCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadquartersState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OpenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PreviousClosePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TickerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearFounded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tickers");
                });

            modelBuilder.Entity("YahooFinanceScrapper.Models.TickerSymbol", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Symbol");

                    b.ToTable("TickerSymbols");

                    b.HasData(
                        new
                        {
                            Symbol = "NVDA",
                            Name = "NVIDIA Corporation"
                        },
                        new
                        {
                            Symbol = "TSLA",
                            Name = "Tesla, Inc."
                        },
                        new
                        {
                            Symbol = "WBA",
                            Name = "Walgreens Boots Alliance, Inc."
                        },
                        new
                        {
                            Symbol = "CEG",
                            Name = "Constellation Energy Corporatio"
                        },
                        new
                        {
                            Symbol = "AAPL",
                            Name = "Apple Inc."
                        },
                        new
                        {
                            Symbol = "SHOP",
                            Name = "Shopify Inc."
                        },
                        new
                        {
                            Symbol = "QQQ",
                            Name = "Invesco QQQ Trust, Series 1"
                        },
                        new
                        {
                            Symbol = "PLTR",
                            Name = "Palantir Technologies Inc."
                        },
                        new
                        {
                            Symbol = "AMZN",
                            Name = "Amazon.com, Inc."
                        },
                        new
                        {
                            Symbol = "META",
                            Name = "Meta Platforms, Inc."
                        },
                        new
                        {
                            Symbol = "CVS",
                            Name = "CVS Health Corporation"
                        },
                        new
                        {
                            Symbol = "MSFT",
                            Name = "Microsoft Corporation"
                        },
                        new
                        {
                            Symbol = "INTC",
                            Name = "Intel Corporation"
                        },
                        new
                        {
                            Symbol = "GCTK",
                            Name = "GlucoTrack, Inc."
                        },
                        new
                        {
                            Symbol = "AVGO",
                            Name = "Broadcom Inc."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
